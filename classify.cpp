#include "classsify.h"

const int* W=new int[71]{19112,-2698,89208,-7642,-7701,21354,-12261,6248,-11737,10025,6273,-7121,-1641,17265,-9006,-7766,-3560,-495,32684,1277,2183,3603,-18422,8568,-30245,-27630,16859,-33980,-39899,49234,-34294,
11711,-9884,12025,-14782,5552,-8769,1361,1192,1759,1500,-6706,3850,-14032,-21963,1135,-14026,-25131,-12057,15731,-15956,-4415,16678,-5724,9296,-2791,-13962,-5135,-4383,-19438,-22323,6830,
1878,16037,-61541,
-19352,-52467,36058,
-1547,30898,-9855,
};

int classify(int* v)
{
    int* offset=(int*)W;
    int* s1;
    int* e1;
    int* s2=v;
    int* e2=s2 + 30;

    // Layer 2
    s1=v + 30;
    e1=s1 + 2;
    for (int* i = s1; i < e1; i++){
        *i=*offset++;
        for (int* j=s2; j < e2; j++) {
            *i+=(*offset++**j) >> 12;
        }
        sigmoid(i);
    }

    // Layer 1
    s2=v + 0;
    e2=s2 + 3;
    for (int* i = s2; i < e2; i++){
        *i=*offset++;
        for (int* j=s1; j < e1; j++) {
            *i+=(*offset++**j) >> 12;
        }
        sigmoid(i);
    }

    // Detects peak or trough
    if ((v[0] > v[1] && v[0] > v[2]) || (v[1] > v[0] && v[1] > v[2]))
    {
        return 1;
    }
    else //Not exercise
    {
        return 0;
    }
}

void sigmoid(int* var)
{
    if (*var < -5 << 12)
    {
        *var = 0;
    }
    else if (*var > 5 << 12)
    {
        *var = 1 << 12;
    }
    else
    {
        *var = ((410 * *var) >> 12) + 2048;
    }
}
