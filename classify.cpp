#include "classify.h"

const int* W=new int[71]{779,-302,-5398,-994,-3456,-7674,-3501,8029,7970,9422,-8146,9542,-5343,-12618,-7811,-8860,-11129,-3766,11986,-4548,2397,14550,1399,-4294,-5781,-26540,-4584,-16282,5057,-7924,17022,
-78257,-20265,-40944,-20894,4222,2843,-1053,-9851,-7594,10020,-6371,-20675,20497,-11065,-8887,5446,-8741,6535,4986,-23657,-24732,8705,-19445,-50337,-3757,7458,-39086,8324,-402,-3564,1897,
2665,-49788,34207,
-63780,51797,22185,
-1993,36688,-45645,
};

int classify(int* v)
{
    int* offset=(int*)W;
    int* s1;
    int* e1;
    int* s2=v;
    int* e2=s2 + 30;

    // Layer 2
    s1=v + 30;
    e1=s1 + 2;
    for (int* i = s1; i < e1; i++){
        *i=*offset++;
        for (int* j=s2; j < e2; j++) {
            *i+=(*offset++**j) >> 12;
        }
        sigmoid(i);
    }

    // Layer 1
    s2=v + 0;
    e2=s2 + 3;
    for (int* i = s2; i < e2; i++){
        *i=*offset++;
        for (int* j=s1; j < e1; j++) {
            *i+=(*offset++**j) >> 12;
        }
        sigmoid(i);
    }

    // Detects peak or trough
    if ((v[0] > v[1] && v[0] > v[2]) || (v[1] > v[0] && v[1] > v[2]))
    {
        return 1;
    }
    else //Not exercise
    {
        return 0;
    }
}

void sigmoid(int* var)
{
    if (*var < -5 << 12)
    {
        *var = 0;
    }
    else if (*var > 5 << 12)
    {
        *var = 1 << 12;
    }
    else
    {
        *var = ((410 * *var) >> 12) + 2048;
    }
}
